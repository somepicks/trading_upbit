import pyqtgraph as pg
from PyQt5.QtGui import QColor

def crosshair1(main_pg, sub_pg1, sub_pg2,sub_pg3,sub_pg4,sub_pg5,sub_pg6,sub_pg7,sub_pg8,sub_pg9,sub_pg10,sub_pg11):
    vLine1 = pg.InfiniteLine()
    vLine1.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine2 = pg.InfiniteLine()
    vLine2.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine3 = pg.InfiniteLine()
    vLine3.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine4 = pg.InfiniteLine()
    vLine4.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine5 = pg.InfiniteLine()
    vLine5.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine6 = pg.InfiniteLine()
    vLine6.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine7 = pg.InfiniteLine()
    vLine7.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine8 = pg.InfiniteLine()
    vLine8.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine9 = pg.InfiniteLine()
    vLine9.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine10 = pg.InfiniteLine()
    vLine10.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine11 = pg.InfiniteLine()
    vLine11.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine12 = pg.InfiniteLine()
    vLine12.setPen(pg.mkPen(QColor(230, 230, 0), width=1))

    # hLine1 = pg.InfiniteLine(angle=0, movable=False, pen=pg.mkPen('k', width=1), label='{value:0.1f}',
    #                                     labelOpts={'position':0.1, 'color': (200,0,0), 'movable': True, 'fill': (0, 0, 200, 100)})
    hLine1 = pg.InfiniteLine(angle=0)
    hLine1.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine2 = pg.InfiniteLine(angle=0)
    hLine2.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine3 = pg.InfiniteLine(angle=0)
    hLine3.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine4 = pg.InfiniteLine(angle=0)
    hLine4.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine5 = pg.InfiniteLine(angle=0)
    hLine5.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine6 = pg.InfiniteLine(angle=0)
    hLine6.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine7 = pg.InfiniteLine(angle=0)
    hLine7.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine8 = pg.InfiniteLine(angle=0)
    hLine8.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine9 = pg.InfiniteLine(angle=0)
    hLine9.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine10 = pg.InfiniteLine(angle=0)
    hLine10.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine11 = pg.InfiniteLine(angle=0)
    hLine11.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine12 = pg.InfiniteLine(angle=0)
    hLine12.setPen(pg.mkPen(QColor(230, 230, 0), width=1))


    main_pg.addItem(vLine1, ignoreBounds=True)
    main_pg.addItem(hLine1, ignoreBounds=True)
    sub_pg1.addItem(vLine2, ignoreBounds=True)
    sub_pg1.addItem(hLine2, ignoreBounds=True)
    sub_pg2.addItem(vLine3, ignoreBounds=True)
    sub_pg2.addItem(hLine3, ignoreBounds=True)
    sub_pg3.addItem(vLine4, ignoreBounds=True)
    sub_pg3.addItem(hLine4, ignoreBounds=True)
    sub_pg4.addItem(vLine5, ignoreBounds=True)
    sub_pg4.addItem(hLine5, ignoreBounds=True)
    sub_pg5.addItem(vLine6, ignoreBounds=True)
    sub_pg5.addItem(hLine6, ignoreBounds=True)
    sub_pg6.addItem(vLine7, ignoreBounds=True)
    sub_pg6.addItem(hLine7, ignoreBounds=True)
    sub_pg7.addItem(vLine8, ignoreBounds=True)
    sub_pg7.addItem(hLine8, ignoreBounds=True)
    sub_pg8.addItem(vLine9, ignoreBounds=True)
    sub_pg8.addItem(hLine9, ignoreBounds=True)
    sub_pg9.addItem(vLine10, ignoreBounds=True)
    sub_pg9.addItem(hLine10, ignoreBounds=True)
    sub_pg10.addItem(vLine11, ignoreBounds=True)
    sub_pg10.addItem(hLine11, ignoreBounds=True)
    sub_pg11.addItem(vLine12, ignoreBounds=True)
    sub_pg11.addItem(hLine12, ignoreBounds=True)

    main_vb = main_pg.getViewBox()
    sub_vb1 = sub_pg1.getViewBox()
    sub_vb2 = sub_pg2.getViewBox()
    sub_vb3 = sub_pg3.getViewBox()
    sub_vb4 = sub_pg4.getViewBox()
    sub_vb5 = sub_pg5.getViewBox()
    sub_vb6 = sub_pg6.getViewBox()
    sub_vb7 = sub_pg7.getViewBox()
    sub_vb8 = sub_pg8.getViewBox()
    sub_vb9 = sub_pg9.getViewBox()
    sub_vb10 = sub_pg10.getViewBox()
    sub_vb11 = sub_pg11.getViewBox()


    def mouseMoved(evt):
        pos = evt[0]
        if main_pg.sceneBoundingRect().contains(pos):
            mousePoint = main_vb.mapSceneToView(pos)
            # self.ct_labellll_03.setText(f"현재가 {format(round(mousePoint.y(), 2), ',')}")
            hLine1.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg1.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb1.mapSceneToView(pos)
            # self.ct_labellll_04.setText(f"체결강도 {format(round(mousePoint.y(), 2), ',')}")
            hLine2.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg2.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb2.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine3.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg3.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb3.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine4.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg4.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb4.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine5.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg5.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb5.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine6.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg6.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb6.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine7.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg7.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb7.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine8.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg8.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb8.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine9.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg9.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb9.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine10.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg10.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb10.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine11.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg11.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb11.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine12.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())

    main_pg.proxy = pg.SignalProxy(main_pg.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg1.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg2.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg3.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg4.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg5.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg6.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg7.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg8.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg9.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg11.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg10.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
def crosshair2(main_pg, sub_pg1, sub_pg2,sub_pg3,sub_pg4,sub_pg5,sub_pg6,sub_pg7,sub_pg8,sub_pg9,sub_pg10,sub_pg11):
    vLine1 = pg.InfiniteLine()
    vLine1.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine2 = pg.InfiniteLine()
    vLine2.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine3 = pg.InfiniteLine()
    vLine3.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine4 = pg.InfiniteLine()
    vLine4.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine5 = pg.InfiniteLine()
    vLine5.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine6 = pg.InfiniteLine()
    vLine6.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine7 = pg.InfiniteLine()
    vLine7.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine8 = pg.InfiniteLine()
    vLine8.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine9 = pg.InfiniteLine()
    vLine9.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine10 = pg.InfiniteLine()
    vLine10.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine11 = pg.InfiniteLine()
    vLine11.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    vLine12 = pg.InfiniteLine()
    vLine12.setPen(pg.mkPen(QColor(230, 230, 0), width=1))

    # hLine1 = pg.InfiniteLine(angle=0, movable=False, pen=pg.mkPen('k', width=1), label='{value:0.1f}',
    #                                     labelOpts={'position':0.1, 'color': (200,0,0), 'movable': True, 'fill': (0, 0, 200, 100)})
    hLine1 = pg.InfiniteLine(angle=0)
    hLine1.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine2 = pg.InfiniteLine(angle=0)
    hLine2.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine3 = pg.InfiniteLine(angle=0)
    hLine3.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine4 = pg.InfiniteLine(angle=0)
    hLine4.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine5 = pg.InfiniteLine(angle=0)
    hLine5.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine6 = pg.InfiniteLine(angle=0)
    hLine6.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine7 = pg.InfiniteLine(angle=0)
    hLine7.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine8 = pg.InfiniteLine(angle=0)
    hLine8.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine9 = pg.InfiniteLine(angle=0)
    hLine9.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine10 = pg.InfiniteLine(angle=0)
    hLine10.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine11 = pg.InfiniteLine(angle=0)
    hLine11.setPen(pg.mkPen(QColor(230, 230, 0), width=1))
    hLine12 = pg.InfiniteLine(angle=0)
    hLine12.setPen(pg.mkPen(QColor(230, 230, 0), width=1))


    main_pg.addItem(vLine1, ignoreBounds=True)
    main_pg.addItem(hLine1, ignoreBounds=True)
    sub_pg1.addItem(vLine2, ignoreBounds=True)
    sub_pg1.addItem(hLine2, ignoreBounds=True)
    sub_pg2.addItem(vLine3, ignoreBounds=True)
    sub_pg2.addItem(hLine3, ignoreBounds=True)
    sub_pg3.addItem(vLine4, ignoreBounds=True)
    sub_pg3.addItem(hLine4, ignoreBounds=True)
    sub_pg4.addItem(vLine5, ignoreBounds=True)
    sub_pg4.addItem(hLine5, ignoreBounds=True)
    sub_pg5.addItem(vLine6, ignoreBounds=True)
    sub_pg5.addItem(hLine6, ignoreBounds=True)
    sub_pg6.addItem(vLine7, ignoreBounds=True)
    sub_pg6.addItem(hLine7, ignoreBounds=True)
    sub_pg7.addItem(vLine8, ignoreBounds=True)
    sub_pg7.addItem(hLine8, ignoreBounds=True)
    sub_pg8.addItem(vLine9, ignoreBounds=True)
    sub_pg8.addItem(hLine9, ignoreBounds=True)
    sub_pg9.addItem(vLine10, ignoreBounds=True)
    sub_pg9.addItem(hLine10, ignoreBounds=True)
    sub_pg10.addItem(vLine11, ignoreBounds=True)
    sub_pg10.addItem(hLine11, ignoreBounds=True)
    sub_pg11.addItem(vLine12, ignoreBounds=True)
    sub_pg11.addItem(hLine12, ignoreBounds=True)

    main_vb = main_pg.getViewBox()
    sub_vb1 = sub_pg1.getViewBox()
    sub_vb2 = sub_pg2.getViewBox()
    sub_vb3 = sub_pg3.getViewBox()
    sub_vb4 = sub_pg4.getViewBox()
    sub_vb5 = sub_pg5.getViewBox()
    sub_vb6 = sub_pg6.getViewBox()
    sub_vb7 = sub_pg7.getViewBox()
    sub_vb8 = sub_pg8.getViewBox()
    sub_vb9 = sub_pg9.getViewBox()
    sub_vb10 = sub_pg10.getViewBox()
    sub_vb11 = sub_pg11.getViewBox()


    def mouseMoved(evt):
        pos = evt[0]
        if main_pg.sceneBoundingRect().contains(pos):
            mousePoint = main_vb.mapSceneToView(pos)
            # self.ct_labellll_03.setText(f"현재가 {format(round(mousePoint.y(), 2), ',')}")
            hLine1.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg1.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb1.mapSceneToView(pos)
            # self.ct_labellll_04.setText(f"체결강도 {format(round(mousePoint.y(), 2), ',')}")
            hLine2.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg2.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb2.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine3.setPos(mousePoint.y())#주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg3.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb3.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine4.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg4.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb4.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine5.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg5.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb5.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine6.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg6.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb6.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine7.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg7.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb7.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine8.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg8.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb8.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine9.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg9.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb9.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine10.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg10.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb10.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine11.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())
        elif sub_pg11.sceneBoundingRect().contains(pos):
            mousePoint = sub_vb11.mapSceneToView(pos)
            # self.ct_labellll_05.setText(f"초당거래대금 {format(round(mousePoint.y(), 2), ',')}")
            hLine12.setPos(mousePoint.y()) #주석처리하면 세로만 나옴
            vLine1.setPos(mousePoint.x())
            vLine2.setPos(mousePoint.x())
            vLine3.setPos(mousePoint.x())
            vLine4.setPos(mousePoint.x())
            vLine5.setPos(mousePoint.x())
            vLine6.setPos(mousePoint.x())
            vLine7.setPos(mousePoint.x())
            vLine8.setPos(mousePoint.x())
            vLine9.setPos(mousePoint.x())
            vLine10.setPos(mousePoint.x())
            vLine11.setPos(mousePoint.x())
            vLine12.setPos(mousePoint.x())

    main_pg.proxy = pg.SignalProxy(main_pg.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg1.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg2.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg3.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg4.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg5.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg6.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg7.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg8.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg9.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg11.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
    sub_pg10.proxy = pg.SignalProxy(sub_pg1.scene().sigMouseMoved, rateLimit=20, slot=mouseMoved)
